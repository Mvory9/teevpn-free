import { InlineKeyboardBuilder } from "puregram";
import { sendMessage, telegram } from "./telegram.js";
import db from "../db/mongodb.js";

export function initHandlers() {
    telegram.updates.on("message", async (context) => {
        if (!context.text) return; // Ignore non-text messages

        let user = await db.getUser(context.from.id);
        if (!user) await db.regUser(context.from.id);
        user = await db.getUser(context.from.id);

        if (!user.isAcceptTerms) {
            const { firstName, lastName } = context.from;
            const fullName = `${firstName || ""} ${lastName || ""}`.trim() || "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å";

            const text =
                `–ü—Ä–∏–≤–µ—Ç, <b>${fullName}</b>! üëã\n\n` +
                `–Ø –±–æ—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–µ—Å–ø–ª–∞—Ç–Ω—ã–º VPN –æ—Ç <a href="${process.env.ORIGINAL_PROJECT}">${process.env.ORIGINAL_PROJECT_NAME}</a>.\n` +
                `–¢—ã –ø–æ–ª—É—á–∏—à—å <b>1 –ì–ë –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–≥–æ —Ç—Ä–∞—Ñ–∏–∫–∞</b>, –∫–æ—Ç–æ—Ä—ã–π —Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç—Å—è –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ –ø–æ–ª–Ω–æ—á—å. üåô\n\n` +
                `–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∏–º–∏ –Ω–∞—à–∏ —É—Å–ª–æ–≤–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:\n\n` +
                `<b>–£—Å–ª–æ–≤–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:</b>\n` +
                `1. VPN –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –∏ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω —Ç–æ–ª—å–∫–æ –¥–ª—è –ª–∏—á–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è.\n` +
                `2. –ó–∞–ø—Ä–µ—â–µ–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–ª—è –ª—é–±—ã—Ö –Ω–µ–∑–∞–∫–æ–Ω–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π.\n` +
                `3. –ú—ã –Ω–µ –Ω–µ—Å–µ–º –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ –∑–∞ –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å–µ—Ä–≤–∏—Å–∞.\n\n` +
                `<b>–ü–æ—á–µ–º—É VPN –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π?</b> ü§î\n` +
                `–ú—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –¥–æ—Å—Ç—É–ø, —á—Ç–æ–±—ã —Ç—ã –º–æ–≥ –æ—Ü–µ–Ω–∏—Ç—å –∫–∞—á–µ—Å—Ç–≤–æ –Ω–∞—à–µ–≥–æ —Å–µ—Ä–≤–∏—Å–∞.\n` +
                `–ï—Å–ª–∏ –ø–æ–Ω—Ä–∞–≤–∏—Ç—Å—è, —Ç—ã –º–æ–∂–µ—à—å –ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ –ø–ª–∞—Ç–Ω—É—é –≤–µ—Ä—Å–∏—é —Å –±–µ–∑–ª–∏–º–∏—Ç–Ω—ã–º —Ç—Ä–∞—Ñ–∏–∫–æ–º –∏ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π.\n\n` +
                `–°–æ–≥–ª–∞—Å–µ–Ω —Å —É—Å–ª–æ–≤–∏—è–º–∏? –ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è VPN! üöÄ\n`;

            const keyboard = new InlineKeyboardBuilder()
                .textButton({ text: "‚úÖ –ü—Ä–∏–Ω—è—Ç—å —É—Å–ª–æ–≤–∏—è –∏ –Ω–∞—á–∞—Ç—å", payload: "accept_terms" });

            await sendMessage(context.from.id, text, { parse_mode: "html", reply_markup: keyboard });

            return;
        }

        if (context.text.toLowerCase() === "/start") {
            const { firstName, lastName } = context.from;
            const fullName = `${firstName || ""} ${lastName || ""}`.trim() || "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å";

            const text =
                `–ü—Ä–∏–≤–µ—Ç, <b>${fullName}</b>! üëã\n\n` +
                `–Ø –±–æ—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–µ—Å–ø–ª–∞—Ç–Ω—ã–º VPN –æ—Ç <a href="${process.env.ORIGINAL_PROJECT}">${process.env.ORIGINAL_PROJECT_NAME}</a>.\n` +
                `–¢—ã –º–æ–∂–µ—à—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π VPN —Å <b>1 –ì–ë –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–≥–æ —Ç—Ä–∞—Ñ–∏–∫–∞</b>, –∫–æ—Ç–æ—Ä—ã–π —Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç—Å—è –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ –ø–æ–ª–Ω–æ—á—å. üåô\n\n` +
                `–ü–æ–º–æ—â—å –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –ø–æ –∫–æ–º–∞–Ω–¥–µ /help –ª–∏–±–æ —É —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏.\n\n` +
                `–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å, –ø—Ä–æ—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ! üöÄ\n`;

            const keyboard = new InlineKeyboardBuilder()
                .textButton({ text: "üõí –ü–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é", payload: "get_config" })
                .textButton({ text: "–ú–æ–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏", payload: "my_config" })
                .row()
                .urlButton({ text: "üí¨ –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞", url: process.env.SUPPORT_LINK });

            await sendMessage(context.from.id, text, { parse_mode: "html", reply_markup: keyboard });
        }

        if (context.text.toLowerCase() === "/help") {
            const text = `<b>üåü –°–ø—Ä–∞–≤–∫–∞ –ø–æ –±–æ—Ç—É ${process.env.PROJECT_NAME} üåü</b>\n\n` +
                `üìã <b>–ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞:</b>\n` +
                `  ‚Ä¢ <code>/start</code> ‚Äî –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –∏ –æ—Ç–∫—Ä—ã—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n` +
                `  ‚Ä¢ <code>/help</code> ‚Äî –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ\n` +
                `  ‚Ä¢ <code>/id</code> ‚Äî –£–∑–Ω–∞—Ç—å –≤–∞—à Telegram ID\n\n` +
                `üîó <b>–ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏:</b>\n` +
                `  ‚Ä¢ <a href="${process.env.CHANNEL_LINK}">üì¢ –ù–∞—à —Ç–µ–ª–µ–≥—Ä–∞–º –∫–∞–Ω–∞–ª</a>\n` +
                `  ‚Ä¢ <a href="${process.env.SUPPORT_LINK}">üí¨ –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞</a>\n\n` +
                `üì≤ <b>–£—Å—Ç–∞–Ω–æ–≤–∫–∞ WireGuard:</b>\n` +
                `  ‚Ä¢ <b>Windows:</b> –°–∫–∞—á–∞–π—Ç–µ <a href="https://download.wireguard.com/windows-client/wireguard-installer.exe">WireGuard</a> —Å –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–≥–æ —Å–∞–π—Ç–∞, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ, –∏–º–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ .conf —Ñ–∞–π–ª.\n` +
                `  ‚Ä¢ <b>macOS:</b> –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ <a href="https://apps.apple.com/ru/app/wireguard/id1441195209">WireGuard</a> –∏–∑ App Store, –¥–æ–±–∞–≤—å—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é —á–µ—Ä–µ–∑ .conf —Ñ–∞–π–ª –∏–ª–∏ QR-–∫–æ–¥.\n` +
                `  ‚Ä¢ <b>Android:</b> –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ <a href="https://play.google.com/store/apps/details?id=com.wireguard.android">WireGuard</a> –∏–∑ Google Play, –∏–º–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é.\n` +
                `  ‚Ä¢ <b>iOS:</b> –ó–∞–≥—Ä—É–∑–∏—Ç–µ <a href="https://apps.apple.com/ru/app/wireguard/id1441195209">WireGuard</a> –∏–∑ App Store, –¥–æ–±–∞–≤—å—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é —á–µ—Ä–µ–∑ QR-–∫–æ–¥ –∏–ª–∏ —Ñ–∞–π–ª.\n` +
                `  ‚Ä¢ <b>Linux:</b> –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ <a href="https://www.wireguard.com/install/">WireGuard</a> —á–µ—Ä–µ–∑ –ø–∞–∫–µ—Ç–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä –¥–∏—Å—Ç—Ä–∏–±—É—Ç–∏–≤–∞, –∏–º–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ .conf.\n\n` +
                `üîê <b>–£—Å—Ç–∞–Ω–æ–≤–∫–∞ AmneziaWG:</b>\n` +
                `  ‚Ä¢ <b>Windows:</b> –°–∫–∞—á–∞–π—Ç–µ <a href="https://github.com/amnezia-vpn/amneziawg-windows-client/releases/download/1.0.0/amneziawg-amd64-1.0.0.msi">AmneziaWG</a> –∫–ª–∏–µ–Ω—Ç, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ, –∏–º–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é.\n` +
                `  ‚Ä¢ <b>macOS:</b> –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ <a href="https://apps.apple.com/ru/app/amneziawg/id6478942365">AmneziaWG</a>, –¥–æ–±–∞–≤—å—Ç–µ .conf —Ñ–∞–π–ª –∏–ª–∏ –æ—Ç—Å–∫–∞–Ω–∏—Ä—É–π—Ç–µ QR-–∫–æ–¥.\n` +
                `  ‚Ä¢ <b>Android:</b> –ó–∞–≥—Ä—É–∑–∏—Ç–µ <a href="https://play.google.com/store/apps/details?id=org.amnezia.awg">AmneziaWG</a> –∏–∑ Google Play, –∏–º–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é.\n` +
                `  ‚Ä¢ <b>iOS:</b> –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ <a href="https://apps.apple.com/ru/app/amneziawg/id6478942365">AmneziaWG</a> –∏–∑ App Store, –¥–æ–±–∞–≤—å—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é —á–µ—Ä–µ–∑ —Ñ–∞–π–ª –∏–ª–∏ QR.\n` +
                `  ‚Ä¢ <b>Linux:</b> –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ <a href="https://amneziavpn.org/ru/documentation/installing-app-on-linux/">AmneziaWG</a>, —Å–ª–µ–¥—É—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º –Ω–∞ —Å–∞–π—Ç–µ, –∏–º–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ .conf.\n\n` +
                `üí° <b>–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å?</b>\n` +
                `–ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–æ–π, –Ω–∞—à–∞ <a href="${process.env.SUPPORT_LINK}">—Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞</a> –≤—Å–µ–≥–¥–∞ –≥–æ—Ç–æ–≤–∞ –ø–æ–º–æ—á—å! üöÄ`;

            const keyboard = new InlineKeyboardBuilder()
                .urlButton({ text: "üí¨ –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞", url: process.env.SUPPORT_LINK });

            await sendMessage(context.from.id, text, { parse_mode: "html", reply_markup: keyboard });
        }

        if (context.text.toLowerCase() === "/id") {
            const text = `üÜî –í–∞—à Telegram ID: <code>${context.from.id}</code>`;
            await sendMessage(context.from.id, text, { parse_mode: "html" });
            return;
        }
    });
}