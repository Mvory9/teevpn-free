import { telegram, sendMessage } from "./telegram.js";
import db from "../db/mongodb.js";
import { InlineKeyboardBuilder } from "puregram";
import { getWireGuardClients } from "../services/wireguard.js";
import { v4 as uuidv4 } from 'uuid';

// Utility to sanitize custom name
function sanitizeCustomName(name) {
    return name ? name.replace(/[^a-zA-Z0-9–∞-—è–ê-–Ø_-]/g, '').slice(0, 20) : null;
}

export function initHandlers() {
    telegram.updates.on("message", async (context) => {
        const errorId = uuidv4();
        try {
            if (!context.from || !context.from.id || !/^\d+$/.test(context.from.id)) {
                throw new Error('–ù–µ–≤–µ—Ä–Ω—ã–π Telegram ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
            }
            if (!context.text || typeof context.text !== 'string') {
                throw new Error('–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏—è');
            }

            const telegramId = Number(context.from.id);
            console.log(`[INFO][${telegramId}]: Message received: ${context.text}`);

            let user = await db.getUser(telegramId);
            if (!user) {
                user = await db.regUser(telegramId);
                if (!user) {
                    throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è');
                }
            }

            if (!user.isAcceptTerms) {
                const { firstName, lastName } = context.from;
                const fullName = `${firstName || ""} ${lastName || ""}`.trim() || "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å";

                const text =
                    `–ü—Ä–∏–≤–µ—Ç, <b>${fullName}</b>! üëã\n\n` +
                    `–Ø –±–æ—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–µ—Å–ø–ª–∞—Ç–Ω—ã–º VPN –æ—Ç <a href="${process.env.ORIGINAL_PROJECT}">${process.env.ORIGINAL_PROJECT_NAME}</a>.\n` +
                    `–¢—ã –ø–æ–ª—É—á–∏—à—å <b>1 –ì–ë –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–≥–æ —Ç—Ä–∞—Ñ–∏–∫–∞</b>, –∫–æ—Ç–æ—Ä—ã–π —Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç—Å—è –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ –ø–æ–ª–Ω–æ—á—å. üåô\n\n` +
                    `–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∏–º–∏ –Ω–∞—à–∏ —É—Å–ª–æ–≤–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:\n\n` +
                    `<b>–£—Å–ª–æ–≤–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:</b>\n` +
                    `1. VPN –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –∏ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω —Ç–æ–ª—å–∫–æ –¥–ª—è –ª–∏—á–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è.\n` +
                    `2. –ó–∞–ø—Ä–µ—â–µ–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–ª—è –ª—é–±—ã—Ö –Ω–µ–∑–∞–∫–æ–Ω–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π.\n` +
                    `3. –ú—ã –Ω–µ –Ω–µ—Å–µ–º –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ –∑–∞ –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å–µ—Ä–≤–∏—Å–∞.\n\n` +
                    `<b>–ü–æ—á–µ–º—É VPN –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π?</b> ü§î\n` +
                    `–ú—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –¥–æ—Å—Ç—É–ø, —á—Ç–æ–±—ã —Ç—ã –º–æ–≥ –æ—Ü–µ–Ω–∏—Ç—å –∫–∞—á–µ—Å—Ç–≤–æ –Ω–∞—à–µ–≥–æ —Å–µ—Ä–≤–∏—Å–∞.\n` +
                    `–ï—Å–ª–∏ –ø–æ–Ω—Ä–∞–≤–∏—Ç—Å—è, —Ç—ã –º–æ–∂–µ—à—å –ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ –ø–ª–∞—Ç–Ω—É—é –≤–µ—Ä—Å–∏—é —Å –±–µ–∑–ª–∏–º–∏—Ç–Ω—ã–º —Ç—Ä–∞—Ñ–∏–∫–æ–º –∏ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π.\n\n` +
                    `–°–æ–≥–ª–∞—Å–µ–Ω —Å —É—Å–ª–æ–≤–∏—è–º–∏? –ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è VPN! üöÄ\n`;

                const keyboard = new InlineKeyboardBuilder()
                    .textButton({ text: "‚úÖ –ü—Ä–∏–Ω—è—Ç—å —É—Å–ª–æ–≤–∏—è –∏ –Ω–∞—á–∞—Ç—å", payload: "accept_terms" });

                await sendMessage(telegramId, text, { parse_mode: "html", reply_markup: keyboard });
                return;
            }

            const args = context.text.split(/\s+/);
            const command = args[0].toLowerCase();

            if (command === "/start") {
                const { firstName, lastName } = context.from;
                const fullName = `${firstName || ""} ${lastName || ""}`.trim() || "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å";

                const text =
                    `–ü—Ä–∏–≤–µ—Ç, <b>${fullName}</b>! üëã\n\n` +
                    `–Ø –±–æ—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–µ—Å–ø–ª–∞—Ç–Ω—ã–º VPN –æ—Ç <a href="${process.env.ORIGINAL_PROJECT}">${process.env.ORIGINAL_PROJECT_NAME}</a>.\n` +
                    `–¢—ã –º–æ–∂–µ—à—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π VPN —Å <b>1 –ì–ë –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–≥–æ —Ç—Ä–∞—Ñ–∏–∫–∞</b>, –∫–æ—Ç–æ—Ä—ã–π —Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç—Å—è –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ –ø–æ–ª–Ω–æ—á—å. üåô\n\n` +
                    `–ü–æ–º–æ—â—å –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –ø–æ –∫–æ–º–∞–Ω–¥–µ /help –ª–∏–±–æ —É —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏.\n\n` +
                    `üîÅ –ë–µ–∑–ª–∏–º–∏—Ç—ã–π VPN: <a href="${process.env.ORIGINAL_PROJECT}">${process.env.ORIGINAL_PROJECT_NAME}</a>\n` +
                    `üí¨ –ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã, –ø–∏—à–∏ –≤ <a href="${process.env.SUPPORT_LINK}">—Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫—É</a>.\n` +
                    `üë©‚Äçüíª –ì–∏—Ç—Ö–∞–± –ø—Ä–æ–µ–∫—Ç–∞: <a href="https://github.com/Mvory9/teevpn-free">https://github.com/Mvory9/teevpn-free</a>\n\n` +
                    `–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å, –ø—Ä–æ—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ! üöÄ\n`;

                const keyboard = new InlineKeyboardBuilder()
                    .textButton({ text: "üõí –ü–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é", payload: "get_free_configs_1" })
                    .textButton({ text: "üíº –ú–æ–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏", payload: "my_configs_1" })
                    .row()
                    .textButton({ text: "üñ• –°–µ—Ä–≤–µ—Ä–∞", payload: "online" })
                    .row()
                    .urlButton({ text: "üí¨ –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞", url: process.env.SUPPORT_LINK });

                await sendMessage(telegramId, text, { parse_mode: "html", reply_markup: keyboard });
                return;
            }

            if (command === "/help") {
                const text =
                    `üìö <b>–ü–æ–º–æ—â—å –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞</b>\n\n` +
                    `–Ø –±–æ—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–µ—Å–ø–ª–∞—Ç–Ω—ã–º VPN –æ—Ç <a href="${process.env.ORIGINAL_PROJECT}">${process.env.ORIGINAL_PROJECT_NAME}</a>. –í–æ—Ç —á—Ç–æ —è —É–º–µ—é:\n\n` +
                    `üîπ <b>/start</b> ‚Äî –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º –∏ –æ—Ç–∫—Ä—ã—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.\n` +
                    `üîπ <b>/help</b> ‚Äî –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏.\n` +
                    `üîπ <b>/online</b> ‚Äî –û–Ω–ª–∞–π–Ω, —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–æ–≤.\n` +
                    `üîπ <b>/rename [ID –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏] [–Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ]</b> ‚Äî –ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ (–¥–æ 20 —Å–∏–º–≤–æ–ª–æ–≤).\n` +
                    `   –ü—Ä–∏–º–µ—Ä: <code>/rename 123e4567-e89b-12d3-a456-426614174000 –î–æ–º</code>\n` +
                    `   –î–ª—è —Å–±—Ä–æ—Å–∞ –Ω–∞–∑–≤–∞–Ω–∏—è: <code>/rename 123e4567-e89b-12d3-a456-426614174000 —Å–±—Ä–æ—Å</code>\n\n` +
                    `üìå <b>–ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é?</b>\n` +
                    `1. –ù–∞–∂–º–∏ "–ü–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é" –≤ –º–µ–Ω—é.\n` +
                    `2. –í—ã–±–µ—Ä–∏ —Å—Ç—Ä–∞–Ω—É –∏ —Å–µ—Ä–≤–µ—Ä.\n` +
                    `3. –ü–æ–ª—É—á–∏ —Ñ–∞–π–ª .conf –∏–ª–∏ QR-–∫–æ–¥ –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è.\n\n` +
                    `üìå <b>–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é?</b>\n` +
                    `1. –£—Å—Ç–∞–Ω–æ–≤–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ AmneziaWG.\n` +
                    `2. –ò–º–ø–æ—Ä—Ç–∏—Ä—É–π .conf —Ñ–∞–π–ª –∏–ª–∏ –æ—Ç—Å–∫–∞–Ω–∏—Ä—É–π QR-–∫–æ–¥.\n` +
                    `3. –ê–∫—Ç–∏–≤–∏—Ä—É–π VPN –∏ –Ω–∞—Å–ª–∞–∂–¥–∞–π—Å—è! üöÄ\n\n` +
                    `üìå <b>–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è:</b>\n` +
                    `‚Äî –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π –¥–æ—Å—Ç—É–ø: 1 –ì–ë —Ç—Ä–∞—Ñ–∏–∫–∞ –≤ –¥–µ–Ω—å.\n` +
                    `‚Äî –¢—Ä–∞—Ñ–∏–∫ —Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç—Å—è –µ–∂–µ–¥–Ω–µ–≤–Ω–æ –≤ 00:00 –ø–æ –ú–°–ö.\n\n` +
                    `üí¨ –ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã, –ø–∏—à–∏ –≤ <a href="${process.env.SUPPORT_LINK}">—Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫—É</a>.\n` +
                    `üë©‚Äçüíª –ì–∏—Ç—Ö–∞–± –ø—Ä–æ–µ–∫—Ç–∞: <a href="https://github.com/Mvory9/teevpn-free">https://github.com/Mvory9/teevpn-free</a>`;

                await sendMessage(telegramId, text, { parse_mode: "html" });
                return;
            }

            if (command === "/rename") {
                if (args.length < 3) {
                    await sendMessage(telegramId, 
                        `‚ùó –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã. –ò—Å–ø–æ–ª—å–∑—É–π: <code>/rename [ID –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏] [–Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ]</code>\n` +
                        `–ü—Ä–∏–º–µ—Ä: <code>/rename 123e4567-e89b-12d3-a456-426614174000 –î–æ–º</code>`, 
                        { parse_mode: "html" }
                    );
                    return;
                }

                const configId = args[1];
                const customName = args.slice(2).join(" ");
                if (!configId || !/^[0-9a-f-]{36}$/.test(configId)) {
                    throw new Error('–ù–µ–≤–µ—Ä–Ω—ã–π ID –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏');
                }
                if (customName.length > 20) {
                    throw new Error('–ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ (–º–∞–∫—Å–∏–º—É–º 20 —Å–∏–º–≤–æ–ª–æ–≤)');
                }

                const config = await db.getConfig({ telegramId, configId });
                if (!config) {
                    await sendMessage(telegramId, 
                        `‚ùå –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ ID –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫—É (${process.env.SUPPORT_LINK}) —Å –∫–æ–¥–æ–º –æ—à–∏–±–∫–∏ ${errorId}`, 
                        { parse_mode: "html" }
                    );
                    return;
                }

                const sanitizedName = customName.toLowerCase() === "—Å–±—Ä–æ—Å" ? null : sanitizeCustomName(customName);
                await db.setConfig({ telegramId, configId }, { $set: { customName: sanitizedName } });

                const text = sanitizedName 
                    ? `‚úÖ –ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–æ –Ω–∞ "${sanitizedName}"!`
                    : `‚úÖ –ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Å–±—Ä–æ—à–µ–Ω–æ!`;

                await sendMessage(telegramId, text, { parse_mode: "html" });
                return;
            }

            if (context.text === "/online") {
                const errorId = uuidv4();
                try {
                    const servers = await db.getServers();
                    if (!servers || !Array.isArray(servers)) {
                        throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Å–µ—Ä–≤–µ—Ä–æ–≤');
                    }

                    let text = `<b>üñ•Ô∏è –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–æ–≤</b>\n\n`;
                    const keyboard = new InlineKeyboardBuilder();

                    if (servers.length === 0) {
                        text += `üòî –£ –ø—Ä–æ–µ–∫—Ç–∞ –ø–æ–∫–∞ —á—Ç–æ –Ω–µ—Ç —Å–µ—Ä–≤–µ—Ä–æ–≤.\n`;
                    } else {
                        let totalOnline = 0;

                        for (const server of servers) {
                            const clientsOnServer = await getWireGuardClients(server);
                            if (!clientsOnServer || !Array.isArray(clientsOnServer)) {
                                console.warn(`[WARN][${errorId}][${server.serverLocationName}]: –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫–ª–∏–µ–Ω—Ç–æ–≤`);
                                continue;
                            }

                            const fiveMinWithMs = 5 * 60 * 1000;
                            const timestamp = Date.now();
                            const onlineClients = clientsOnServer.filter(client => 
                                client.latestHandshakeAt && 
                                timestamp - new Date(client.latestHandshakeAt).getTime() < fiveMinWithMs
                            );
                            const onlineOnServer = onlineClients.length || 0;
                            totalOnline += onlineOnServer;

                            text += `üåê <b>${server.serverLocationName}</b> ‚îÇ ${server.city}\n` +
                                `‚îú üë• <b>–û–Ω–ª–∞–π–Ω:</b> <code>${onlineOnServer}</code>\n` +
                                /*`${user.isAdmin ? `‚îú üìä <b>–í—Å–µ–≥–æ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π:</b> <code>${totalCount}</code>\n` : ""}` +*/
                                `‚îú üîó <b>–ü—Ä–æ—Ç–æ–∫–æ–ª:</b> ${server.type === "wg" ? "WireGuard" : "AmneziaWG"}\n` +
                                `‚îú üß† <b>–ù–µ–π—Ä–æ—Å–µ—Ç—å Gemini:</b> ${server.properties.gemini ? "‚úÖ" : "‚ùå"}\n` +
                                `‚îî üì∫ <b>YouTube –±–µ–∑ —Ä–µ–∫–ª–∞–º—ã:</b> ${server.properties.youtubeNoAds ? "‚úÖ" : "‚ùå"}\n\n`;
                        }

                        text += `<b>üï∏ –û–±—â–∏–π –æ–Ω–ª–∞–π–Ω:</b> <code>${totalOnline}</code> —á–µ–ª–æ–≤–µ–∫.`;
                    }

                    keyboard.textButton({ text: "üîô –ù–∞–∑–∞–¥", payload: "start" });

                    await sendMessage(context.from.id, text, {
                        parse_mode: "html",
                        reply_markup: keyboard
                    });
                } catch (error) {
                    console.error(`[ERROR][${errorId}][${context.from.id}]: –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ online:`, error);
                    await sendMessage(context.from.id, 
                        `‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–µ—Ä–≤–µ—Ä–∞—Ö. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫—É (${process.env.SUPPORT_LINK}) —Å –∫–æ–¥–æ–º –æ—à–∏–±–∫–∏ ${errorId}`, 
                        { parse_mode: "html" }
                    );
                    // –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞
                    if (process.env.SUPPORT_LINK.includes('t.me')) {
                        await sendMessage(process.env.ADMIN_ID, 
                            `‚ö† –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–µ—Ä–æ–≤ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${context.from.id}: ${error.message} (–ö–æ–¥: ${errorId})`, 
                            { parse_mode: "html" }
                        ).catch(notifyError => {
                            console.error(`[ERROR][${errorId}][Notify]: –ù–µ —É–¥–∞–ª–æ—Å—å —É–≤–µ–¥–æ–º–∏—Ç—å —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫—É:`, notifyError);
                        });
                    }
                }
                return;
            }

            await sendMessage(telegramId, 
                `‚ùó –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ò—Å–ø–æ–ª—å–∑—É–π /help –¥–ª—è —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Å—å –≤ <a href="${process.env.SUPPORT_LINK}">—Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫—É</a>.`, 
                { parse_mode: "html" }
            );

        } catch (error) {
            console.error(`[ERROR][${errorId}][${context.from?.id || 'unknown'}]: –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è:`, error);
            if (context.from?.id && /^\d+$/.test(context.from.id)) {
                await sendMessage(context.from.id, 
                    `‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫—É (${process.env.SUPPORT_LINK}) —Å –∫–æ–¥–æ–º –æ—à–∏–±–∫–∏ ${errorId}`, 
                    { parse_mode: "html" }
                );
            }
        }
    });
}