import { InlineKeyboardBuilder } from "puregram";
import { sendMessage, telegram } from "./telegram.js";
import db from "../db/mongodb.js";

export function initCallbacks() {
    telegram.updates.on("callback_query", async (context) => {
        if (!context.queryPayload) return;

        let user = await db.getUser(context.from.id);
        if (!user) await db.regUser(context.from.id);
        user = await db.getUser(context.from.id);

        if (context.queryPayload === `accept_terms`) {
            if (user.isAcceptTerms) {
                const text = `–¢—ã —É–∂–µ –ø—Ä–∏–Ω—è–ª —É—Å–ª–æ–≤–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è. –ú–æ–∂–µ—à—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–µ—Å–ø–ª–∞—Ç–Ω—ã–º VPN –æ—Ç <a href="${process.env.ORIGINAL_PROJECT}">${process.env.ORIGINAL_PROJECT_NAME}</a>.`;
                await sendMessage(context.from.id, text, { parse_mode: "html" });
                return;
            }

            user.isAcceptTerms = true;
            await user.save();

            const { firstName, lastName } = context.from;
            const fullName = `${firstName || ""} ${lastName || ""}`.trim() || "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å";

            const text = `–°–ø–∞—Å–∏–±–æ, <b>${fullName}</b>! üéâ\n\n` +
                `–¢—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–Ω—è–ª —É—Å–ª–æ–≤–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è. –¢–µ–ø–µ—Ä—å —Ç—ã –º–æ–∂–µ—à—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–µ—Å–ø–ª–∞—Ç–Ω—ã–º VPN –æ—Ç <a href="${process.env.ORIGINAL_PROJECT}">${process.env.ORIGINAL_PROJECT_NAME}</a>.\n` +
                `–¢–µ–±–µ –¥–æ—Å—Ç—É–ø–Ω–æ <b>1 –ì–ë –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–≥–æ —Ç—Ä–∞—Ñ–∏–∫–∞</b>, –∫–æ—Ç–æ—Ä—ã–π —Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç—Å—è –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ –ø–æ–ª–Ω–æ—á—å. üåô\n\n` +
                `–ï—Å–ª–∏ —É —Ç–µ–±—è –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å, –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ –º–Ω–µ!`;

            const keyboard = new InlineKeyboardBuilder()
                .text({ text: "–ù–∞—á–∞—Ç—å", payload: "start" });

            await sendMessage(context.from.id, text, { parse_mode: "html", reply_markup: keyboard });
            return;
        }

        if (!user.isAcceptTerms) {
            const { firstName, lastName } = context.from;
            const fullName = `${firstName || ""} ${lastName || ""}`.trim() || "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å";

            const text =
                `–ü—Ä–∏–≤–µ—Ç, <b>${fullName}</b>! üëã\n\n` +
                `–Ø –±–æ—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–µ—Å–ø–ª–∞—Ç–Ω—ã–º VPN –æ—Ç <a href="${process.env.ORIGINAL_PROJECT}">${process.env.ORIGINAL_PROJECT_NAME}</a>.\n` +
                `–¢—ã –ø–æ–ª—É—á–∏—à—å <b>1 –ì–ë –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–≥–æ —Ç—Ä–∞—Ñ–∏–∫–∞</b>, –∫–æ—Ç–æ—Ä—ã–π —Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç—Å—è –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ –ø–æ–ª–Ω–æ—á—å. üåô\n\n` +
                `–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∏–º–∏ –Ω–∞—à–∏ —É—Å–ª–æ–≤–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:\n\n` +
                `<b>–£—Å–ª–æ–≤–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:</b>\n` +
                `1. VPN –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –∏ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω —Ç–æ–ª—å–∫–æ –¥–ª—è –ª–∏—á–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è.\n` +
                `2. –ó–∞–ø—Ä–µ—â–µ–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–ª—è –ª—é–±—ã—Ö –Ω–µ–∑–∞–∫–æ–Ω–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π.\n` +
                `3. –ú—ã –Ω–µ –Ω–µ—Å–µ–º –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ –∑–∞ –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å–µ—Ä–≤–∏—Å–∞.\n\n` +
                `<b>–ü–æ—á–µ–º—É VPN –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π?</b> ü§î\n` +
                `–ú—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –¥–æ—Å—Ç—É–ø, —á—Ç–æ–±—ã —Ç—ã –º–æ–≥ –æ—Ü–µ–Ω–∏—Ç—å –∫–∞—á–µ—Å—Ç–≤–æ –Ω–∞—à–µ–≥–æ —Å–µ—Ä–≤–∏—Å–∞.\n` +
                `–ï—Å–ª–∏ –ø–æ–Ω—Ä–∞–≤–∏—Ç—Å—è, —Ç—ã –º–æ–∂–µ—à—å –ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ –ø–ª–∞—Ç–Ω—É—é –≤–µ—Ä—Å–∏—é —Å –±–µ–∑–ª–∏–º–∏—Ç–Ω—ã–º —Ç—Ä–∞—Ñ–∏–∫–æ–º –∏ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π.\n\n` +
                `–°–æ–≥–ª–∞—Å–µ–Ω —Å —É—Å–ª–æ–≤–∏—è–º–∏? –ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è VPN! üöÄ\n`;

            const keyboard = new InlineKeyboardBuilder()
                .text({ text: "‚úÖ –ü—Ä–∏–Ω—è—Ç—å —É—Å–ª–æ–≤–∏—è –∏ –Ω–∞—á–∞—Ç—å", payload: "accept_terms" });

            await sendMessage(context.from.id, text, { parse_mode: "html", reply_markup: keyboard });

            return;
        }

        if (context.text.toLowerCase() === "/start") {
            const { firstName, lastName } = context.from;
            const fullName = `${firstName || ""} ${lastName || ""}`.trim() || "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å";

            const text =
                `–ü—Ä–∏–≤–µ—Ç, <b>${fullName}</b>! üëã\n\n` +
                `–Ø –±–æ—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–µ—Å–ø–ª–∞—Ç–Ω—ã–º VPN –æ—Ç <a href="${process.env.ORIGINAL_PROJECT}">${process.env.ORIGINAL_PROJECT_NAME}</a>.\n` +
                `–¢—ã –º–æ–∂–µ—à—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π VPN —Å <b>1 –ì–ë –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–≥–æ —Ç—Ä–∞—Ñ–∏–∫–∞</b>, –∫–æ—Ç–æ—Ä—ã–π —Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç—Å—è –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ –ø–æ–ª–Ω–æ—á—å. üåô\n\n` +
                `–ü–æ–º–æ—â—å –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –ø–æ –∫–æ–º–∞–Ω–¥–µ /help –ª–∏–±–æ —É —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏.\n\n` +
                `–ß—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å, –ø—Ä–æ—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ! üöÄ\n`;

            const keyboard = new InlineKeyboardBuilder()
                .textButton({ text: "üõí –ü–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é", payload: "get_config" })
                .textButton({ text: "–ú–æ–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏", payload: "my_config" })
                .row()
                .urlButton({ text: "üí¨ –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞", url: process.env.SUPPORT_LINK });

            await sendMessage(context.from.id, text, { parse_mode: "html", reply_markup: keyboard });
        }

        
    });
}